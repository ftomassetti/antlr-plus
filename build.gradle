buildscript {
   ext.kotlin_version = '1.0.3'

   repositories {
     mavenCentral()
     maven {
        name 'JFrog OSS snapshot repo'
        url  'https://oss.jfrog.org/oss-snapshot-local/'
     }
     jcenter()
   }

   dependencies {
     classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
   }    
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'antlr'
apply plugin: 'maven-publish'

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
}

group = 'me.tomassetti'
version = '0.2'

dependencies {
    antlr "org.antlr:antlr4:4.5.1"
    compile "org.antlr:antlr4-runtime:4.5.1"
    testCompile 'junit:junit:4.12'
    testCompile group: 'com.google.guava', name: 'guava', version: '19.0'
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ['-package', 'me.tomassetti.antlrplus.antlrparser']
    outputDirectory = new File("generated-src/antlr/main/me/tomassetti/antlrplus/antlrparser".toString())
}
compileJava.dependsOn generateGrammarSource
sourceSets {
    antlrdeps {
        java.srcDir 'src/main/antlr-deps/'
    }
    generated {
        java.srcDir 'generated-src/antlr/main/'
    }
}
compileJava.source sourceSets.antlrdeps.java, sourceSets.generated.java, sourceSets.main.java

generateTestGrammarSource {
    maxHeapSize = "64m"
    arguments += ['-package', 'me.tomassetti.antlrplus.python']
    outputDirectory = new File("generated-src/antlr/test/me/tomassetti/antlrplus/python".toString())
}
compileTestJava.dependsOn generateTestGrammarSource
sourceSets {
    test_generated {
        java.srcDir 'generated-src/antlr/test/'
    }
}
compileTestJava.source sourceSets.test_generated.java, sourceSets.test.java

clean{
    delete "generated-src"
}

idea {
    module {
        sourceDirs += file("generated-src/antlr/main")
        sourceDirs += file("src/main/antlr-deps")
        testSourceDirs += file("generated-src/antlr/test")
    }
}
